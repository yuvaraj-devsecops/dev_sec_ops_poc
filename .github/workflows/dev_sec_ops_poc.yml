name: CI/CD Pipeline with SonarCloud, QA, Deployment, and Jira Integration

on:
  push:
    branches:
      - main

jobs:
  code_scan:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v1
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=your_sonar_project_key
            -Dsonar.organization=your_organization
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  qa_automation:
    runs-on: self-hosted
    needs: code_scan
    steps:
      - name: Run QA Automation
        run: |
          # Install dependencies and run your QA tests
          npm install
          npm test

  deploy:
    runs-on: self-hosted
    needs: qa_automation
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to EC2
        run: |
          # SSH into EC2 and deploy
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_SSH_KEY }} ec2-user@your_ec2_ip "bash -s" < ./deploy_script.sh
          
      - name: Post Deployment Jira Ticket
        run: |
          curl -u ${{ secrets.JIRA_USER }}:${{ secrets.JIRA_API_TOKEN }} \
            -X POST \
            -H "Content-Type: application/json" \
            -d '{
              "fields": {
                "project": { "key": "PROJECT_KEY" },
                "summary": "Deployment to EC2 completed",
                "description": "Deployment to EC2 instance IP: your_ec2_ip was successful. Logs are attached.",
                "issuetype": { "name": "Task" }
              }
            }' \
            https://your_jira_domain.atlassian.net/rest/api/2/issue/

      - name: Update Jira with Logs
        run: |
          LOG_FILE=$(mktemp)
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_SSH_KEY }} ec2-user@your_ec2_ip "cat /path_to_your_logs/*.log" > $LOG_FILE
          
          curl -u ${{ secrets.JIRA_USER }}:${{ secrets.JIRA_API_TOKEN }} \
            -X POST \
            -H "X-Atlassian-Token: no-check" \
            -F "file=@${LOG_FILE}" \
            https://your_jira_domain.atlassian.net/rest/api/2/issue/PROJECT_KEY/attachments
